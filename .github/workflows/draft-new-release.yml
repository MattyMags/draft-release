name: "Draft new release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version you want to release."
        required: true

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Do not change, fetches all the commits to pass to the starting ref. 
          
      - name: Create release branch
        run: git checkout -b release/${{ github.event.inputs.version }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          
      - name: Bump version in package.json
        run: yarn version --new-version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Update changelog
        run: yarn install && yarn unreleased

      - name: Commit package.json
        id: make-commit
        run: |
          git add ./package.json
          git commit --message "Prepare release ${{ github.event.inputs.version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
          
      - name: Push new branch
        run: git push origin release/${{ github.event.inputs.version }}
        
      - name: Generate Comment String from Markdown
        id: getCommentContent
        uses: juliangruber/read-file-action@v1
        with:
          path: ./URELEASEDCHANGELOG.md

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        id: create-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/${{ github.event.inputs.version }}
          base: master
          title: > 
                chore: Prerelease - ${{ github.event.inputs.version }}
          reviewers: ${{ github.actor }}
          body: ${{ steps.getCommentContent.outputs.content }
                  
#       - name: Generate Comment String from Markdown
#         id: getCommentContent
#         uses: juliangruber/read-file-action@v1
#         with:
#           path: ./URELEASEDCHANGELOG.md

#       - name: Add Unreleased Changes to PR
#         run: |
#           git config --local user.email "matthew.magnotta@avb.net"
#           git config --local user.name "MattyMags"
#           gh api \
#             --method POST \
#             -H "Accept: application/vnd.github+json" \
#             https://api.github.com/repos/Mattymags/draft-release/issues/${{ steps.create-pr.outputs.number }}/comments \
#             -f body="${{ steps.getCommentContent.outputs.content }}"

