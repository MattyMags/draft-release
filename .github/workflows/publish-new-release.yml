name: "Publish new release"

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'release/') # make sure this only runs when its a release branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      - name: Extract version from branch name (for release branches)
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Bump version in package.json
        run: yarn version --new-version ${{ env.RELEASE_VERSION }}

      # - name: Commit package.json
      #   id: make-commit
      #   run: |
      #     git add ./package.json
      #     git commit --message "chore: bump version - ${{ env.RELEASE_VERSION }}"
      #     echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push Tags
        run: |
          git push --follow-tags
      - name: Create Release
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \ 
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/mattymags/draft-release/releases \
            -d '{"tag_name":"v130.0.0","target_commitish":"master","name":"v130.0.0","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":false}'
          
          
          
      # - name: Create Release
      #   uses: thomaseizinger/create-release@1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
      #     tag_name: ${{ env.RELEASE_VERSION }}
      #     name: ${{ env.RELEASE_VERSION }}
      #     draft: false
      #     prerelease: false

      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge master back to dev
        run: |
          git fetch 
          git checkout dev
          git pull
          git merge --no-ff master -m "Auto-merge master back to dev"
          git push
