name: "Publish new release"

on:
  workflow_dispatch:

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true # only merged pull requests must trigger this job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      # - name: Update changelog
      #   run: yarn install && yarn changelog

      # - name: Commit updated CHANGELOG
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     branch: master
      #     commit_message: Update CHANGELOG
      #     file_pattern: CHANGELOG.md

      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}

          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      # - name: Update changelog
      #   run: yarn install && yarn changelog

      # - name: Commit updated CHANGELOG
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     branch: master
      #     commit_message: Update CHANGELOG
      #     file_pattern: CHANGELOG.md

      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge master back to dev
        run: |
          git fetch 
          git checkout dev
          git pull
          git merge --no-ff master -m "Auto-merge master back to dev"
          git push
      # if needed, you can checkout the latest master here, build artifacts and publish / deploy them somewhere
      # the create-release action has an output `upload_url` output that you can use to upload assets
