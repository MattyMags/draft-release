name: "Publish new release"

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'release/') # make sure this only runs when its a release branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      - name: Extract version from branch name
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Initialize mandatory git config
        run: |
          git config --local user.email "avb-dev-services@avb.net"
          git config --local user.name "AVB Dev Bot"

      - name: Bump version
        run: yarn version --new-version ${{ env.RELEASE_VERSION }}

      - name: Update changelog
        run: yarn install && yarn changelog

      - name: Push tags
        run: git push --follow-tags

      - name: Generate Comment String from Markdown
        id: get-comment-content
        uses: juliangruber/read-file-action@v1
        with:
          path: ./CHANGELOG.md

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/mattymags/draft-release/releases \
            -f tag_name=${{ env.RELEASE_VERSION }}  \
           -f target_commitish='master' \
           -f name="Release - ${{ env.RELEASE_VERSION }}" \
           -f body=${{ steps.get-comment-content.outputs.content }}\
           -F draft=false \
           -F prerelease=false \
           -F generate_release_notes=false

      - name: Commit updated CHANGELOG
        run: |
          git add CHANGELOG.md
          git commit -m 'chore: update - ${{ env.RELEASE_VERSION }}'
          git push

      - name: Merge master back to dev
        run: |
          git fetch 
          git checkout dev
          git pull
          git merge --no-ff master -m "Auto-merge master back to dev"
          git push
